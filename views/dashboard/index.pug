extends ../layout

block content
  .row.breadcrumbs
    .col-sm-12
      a(href='/')= brigade.name
      | &nbsp;&nbsp;/&nbsp;
      a(href='/brigade/dashboard') Admin Dashboard
  .row.page-header
    .col-sm-12
      h1.page-title Admin Dashboard
  .row
    hr
  .container
    .row
    .card.card-block.col-sm-6.metric.checkin-count
      h4.card-title Number of Checkins
      h5.card-subtitle.text-muted (Within past 6 days)
      p.card-text
        i.fa.fa-spin.fa-spinner
    .card.card-block.col-sm-6.metric.anon-checkin-count
      h4.card-title Number of Anonymous Checkins
      h5.card-subtitle.text-muted (Within past 6 days)
      p.card-text
        i.fa.fa-spin.fa-spinner
    .card.card-block.col-sm-6.metric.member-count
      h4.card-title Number of Members
      h5.card-subtitle.text-muted Ever signed in
      p.card-text
        i.fa.fa-spin.fa-spinner
    .card.card-block.col-sm-6.metric.new-member-count
      h4.card-title Number of New Accounts Created
      h5.card-subtitle.text-muted (Within past 6 days)
      p.card-text
        i.fa.fa-spin.fa-spinner
    .card.card-block.col-sm-6.metric.checkin-list
      h4.card-title Checkins
      h5.card-subtitle.text-muted (Within past 6 days)
      p.card-text
        i.fa.fa-spin.fa-spinner
    .card.card-block.col-sm-6.metric.new-member-list
      h4.card-title New Members
      h5.card-subtitle.text-muted (Within past 6 days)
      p.card-text
        i.fa.fa-spin.fa-spinner
        
        
  block script
    script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.2/moment.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/superagent/2.3.0/superagent.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.16.4/lodash.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.4.6/bluebird.min.js')
    script.
      $(document).ready(function(){
        fetchMetrics()
        window.polling = setInterval(fetchMetrics, 5000)
      })
      var rightNow = moment()
      var aWeekAgo = moment().subtract(6, 'days')
      var metrics = [
        {
          selector: '.checkin-count',
          endpoint: '/api/models/checkins',
          type: 'count'
        },
        {
          selector: '.anon-checkin-count',
          endpoint: '/api/models/checkins',
          type: 'count',
          query: { date: { $gte: aWeekAgo.toISOString() }, githubUsername: '' }
        },
        {
          selector: '.member-count',
          endpoint: '/api/models/users',
          type: 'count'
        },
        {
          selector: '.new-member-count',
          endpoint: '/api/models/users',
          type: 'count',
          query: { createdAt: { $gte: aWeekAgo.toISOString() } }
        },
        {
          selector: '.checkin-list',
          endpoint: '/api/models/checkins',
          type: 'find',
          query: { date: { $gte: aWeekAgo.toISOString() } }
        },
        {
          selector: '.new-member-list',
          endpoint: '/api/models/users',
          type: 'find',
          query: { createdAt: { $gte: aWeekAgo.toISOString() } }
        }
      ]
      
      function fetchMetrics () {
        var metricCalls = []
        _.forEach(metrics, function(metric) {
          metricCalls.push(callMetric(metric))
        })
        Promise.all(metricCalls).then(function(results){
          _.forEach(results, function(metric) {
            if (metric.original.type === 'count') {
              return $(metric.original.selector).find('p.card-text').html('<h1>' + metric.results.data + '</h1>')
            }
            if (metric.original.type === 'find') {
              if (!metric.results.data.length){
                return $(metric.original.selector).find('p.card-text').html('<em>No results found</em>')
              }
              if(metric.original.endpoint.indexOf('users') > -1){
                var userList = $('<ul>')
                for (userIndex in metric.results.data) {
                  var user = metric.results.data[userIndex]
                  var userLine = $('<li>')
                  userLine.html(user.profile.name + ' (' + user.username + ') - ' + user.skills.join(', '))
                  userList.append(userLine)
                }
                $(metric.original.selector).find('p.card-text').html(userList)
              } else if (metric.original.endpoint.indexOf('checkins') > -1) {
                var checkinList = $('<ul>')
                for (checkinIndex in metric.results.data) {
                  var checkin = metric.results.data[checkinIndex]
                  var checkinLine = $('<li>')
                  checkinLine.html(checkin.name + ' (' + checkin.githubUsername + ') &lt;' + checkin.email + '&gt; - ' + checkin.skills.join(', '))
                  checkinList.append(checkinLine)
                }
                $(metric.original.selector).find('p.card-text').html(checkinList)
              } else {
                $(metric.original.selector).find('p.card-text').html(JSON.stringify(metric.results.data))
              }
            }
          })
        })
      }
      function callMetric(metric) {
        return new Promise(function(resolve, reject) {
          var url = metric.endpoint + '?type=' + metric.type
          if(metric.query){
            var query = encodeURIComponent(JSON.stringify(metric.query))
            url = url + '&query=' + query
          }
          superagent.get(url).end(function(err, results) {
            if (err) return reject(err)
            resolve({ original: metric, results: results.body })
          })
        })
      }
